#version 450

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct GridList {
	uint particle_id;
	float cell_id;
};

struct StartIndexList {
	uint start;
};

layout(std430, binding = 5) buffer gridBuffer{
    GridList grid[];
};

layout(std430, binding = 6) buffer startIndexBuffer{
    StartIndexList startIndex[];
};

layout(binding = 7, offset = 0) uniform atomic_uint gridCounter;

void main()
{
    uint id = gl_GlobalInvocationID.x;
	if(id < atomicCounter(gridCounter))
	{
		if(id == 0) {
			startIndex[uint(grid[id].cell_id)].start = 0;
		}
		else {
			if(uint(grid[id-1].cell_id) != uint(grid[id].cell_id))
				startIndex[uint(grid[id].cell_id)].start = id;
		}
	}
}