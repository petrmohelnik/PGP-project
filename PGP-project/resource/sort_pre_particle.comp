#version 430

#define PI 3.141592

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct ParticlePool {
	vec4 pos; //w = ttl
	vec4 velocity; //w=density
	vec4 force; //w=pressure
};

struct SortList {
	unsigned int index;
	float distance;
};

layout(std430, binding = 0) buffer particleBuffer{
    ParticlePool particle[];
};

layout(std430, binding = 1) buffer sortBuffer{
    SortList sort[];
};

layout(binding = 3, offset = 0) uniform atomic_uint sortCounter;

struct GridList {
	uint particle_id;
	float cell_id;
};

layout(std430, binding = 5) buffer gridBuffer{
    GridList grid[];
};


uniform vec3 halfVector;
uniform uint maxParticles;

void main()
{
    uint id = gl_GlobalInvocationID.x;
	if(id < maxParticles)
	{
		GridList p = grid[id];

		vec4 posTtl = particle[p.particle_id].pos;
		vec3 pos = posTtl.xyz;
		float ttl = posTtl.w;

		if(ttl > 0.0) {
			uint c = atomicCounterIncrement(sortCounter);
			sort[c].index = p.particle_id;
			sort[c].distance = dot(halfVector, pos);
		}
	}
}